#!/bin/bash

remote="$1"
url="$2"

# Specify your updated branch naming convention regex pattern
branch_naming_pattern="^refs/heads/(minor|patch|major)/[a-z0-9-]+$"

while read local_ref local_sha
do
    echo "ref is $local_ref"

    if [[ "$local_ref" == "refs/heads/main" ]]; then
        # Allow pushing to main branch without enforcing naming convention
        exit 0
    elif [[ "$local_ref" =~ $branch_naming_pattern ]]; then
        # Branch name follows the convention
        exit 0
    else
        # Branch name does not follow the convention
        echo "Error: Branch name does not follow the naming convention. It should start with 'minor/', 'patch/', or 'major/'."
        exit 1
    fi
done

# Extract current version from package.json
current_version=$(jq -r .version package.json)

# Extract the part before the first slash
branch_prefix=${current_branch%%/*}

# Find the latest commit with the upgrade message and extract its version
latest_commit_version=$(git log --format=%B -n 1000 | grep -oP "Upgrade to \K[0-9]+\.[0-9]+\.[0-9]+" | head -n 1)

if [ -z "$latest_commit_version" ]; then
    echo "No previous version upgrade commit found. Running npm version patch..."
    npm version $branch_prefix -m "Upgrade to %s for reasons"
elif [ "$current_version" != "$latest_commit_version" ]; then
    echo "Current version ($current_version) differs from latest commit version ($latest_commit_version). Running npm version patch..."
    npm version $branch_prefix -m "Upgrade to %s for reasons"
else
    echo "Current version ($current_version) matches latest commit version. No action needed."
fi
